initSidebarItems({"fn":[["empty","Creates a stream which contains no elements."],["iter","Converts an `Iterator` into a `Stream` which is always ready to yield the next value."],["once","Creates a stream of a single element."],["pending","Creates a stream which never returns any elements."],["poll_fn","Creates a new stream wrapping a function returning `Poll<Option<T>>`."],["repeat","Create a stream which produces the same item repeatedly."],["select","This function will attempt to pull items from both streams. Each stream will be polled in a round-robin fashion, and whenever a stream is ready to yield an item that item is yielded."],["unfold","Creates a `Stream` from a seed and a closure returning a `Future`."]],"struct":[["Chain","Stream for the `chain` method."],["Collect","Future for the `collect` method."],["Concat","Future for the `concat` method."],["Empty","Stream for the [`empty`] function."],["Enumerate","Stream for the `enumerate` method."],["Filter","Stream for the `filter` method."],["FilterMap","Stream for the `filter_map` method."],["Flatten","Stream for the `flatten` method."],["Fold","Future for the `fold` method."],["ForEach","Future for the `for_each` method."],["Forward","Future for the `forward` method."],["Fuse","Stream for the `fuse` method."],["Inspect","Stream for the `inspect` method."],["Iter","Stream for the [`iter`] function."],["Map","Stream for the `map` method."],["Next","Future for the `next` method."],["Once","A stream which emits single element and then EOF."],["Peekable","A `Stream` that implements a `peek` method."],["Pending","Stream for the [`pending()`] function."],["PollFn","Stream for the [`poll_fn`] function."],["Repeat","Stream for the [`repeat`] function."],["Select","Stream for the [`select()`] function."],["SelectNextSome","Future for the `select_next_some` method."],["Skip","Stream for the `skip` method."],["SkipWhile","Stream for the `skip_while` method."],["StreamFuture","Future for the `into_future` method."],["Take","Stream for the `take` method."],["TakeWhile","Stream for the `take_while` method."],["Then","Stream for the `then` method."],["Unfold","Stream for the [`unfold`] function."],["Zip","Stream for the `zip` method."]],"trait":[["StreamExt","An extension trait for `Stream`s that provides a variety of convenient combinator functions."]]});