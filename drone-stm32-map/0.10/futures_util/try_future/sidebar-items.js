initSidebarItems({"fn":[["try_join","Joins the result of two futures, waiting for them both to complete or for one to produce an error."],["try_join3","Same as `try_join`, but with more futures."],["try_join4","Same as `try_join`, but with more futures."],["try_join5","Same as `try_join`, but with more futures."],["try_select","Waits for either one of two differently-typed futures to complete."]],"struct":[["AndThen","Future for the `and_then` method."],["ErrInto","Future for the `err_into` method."],["FlattenSink","Sink for the `flatten_sink` method."],["InspectErr","Future for the `inspect_err` method."],["InspectOk","Future for the `inspect_ok` method."],["IntoFuture","Future for the `into_future` method."],["MapErr","Future for the `map_err` method."],["MapOk","Future for the `map_ok` method."],["OrElse","Future for the `or_else` method."],["TryFlattenStream","Stream for the `try_flatten_stream` method."],["TryJoin","Future for the `try_join` function."],["TryJoin3","Future for the [`try_join3`] function."],["TryJoin4","Future for the [`try_join4`] function."],["TryJoin5","Future for the [`try_join5`] function."],["TrySelect","Future for the [`try_select()`] function."],["UnwrapOrElse","Future for the `unwrap_or_else` method."]],"trait":[["TryFutureExt","Adapters specific to [`Result`]-returning futures"]]});