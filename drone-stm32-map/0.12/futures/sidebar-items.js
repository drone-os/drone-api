initSidebarItems({"macro":[["join","Polls multiple futures simultaneously, returning a tuple of all results once complete."],["pin_mut","Pins a value on the stack."],["ready","Extracts the successful type of a `Poll<T>`."],["select_biased","Polls multiple futures and streams simultaneously, executing the branch for the future that finishes first. Unlike [`select!`], if multiple futures are ready, one will be selected in order of declaration. Futures directly passed to `select_biased!` must be `Unpin` and implement `FusedFuture`."],["try_join","Polls multiple futures simultaneously, resolving to a [`Result`] containing either a tuple of the successful outputs or an error."]],"mod":[["channel","Cross-task communication."],["future","Asynchronous values."],["lock","Futures-powered synchronization primitives."],["never","This module contains the `Never` type."],["prelude","A \"prelude\" for crates using the `futures` crate."],["sink","Asynchronous sinks."],["stream","Asynchronous streams."],["task","Tools for working with tasks."]]});