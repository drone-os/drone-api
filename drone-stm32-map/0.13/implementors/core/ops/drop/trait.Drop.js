(function() {var implementors = {};
implementors["drone_core"] = [{"text":"impl Drop for CString","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Item, '_&gt; Drop for Guard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Drop for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Drop for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Drop for Receiver&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Drop for Sender&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, E&gt; Drop for Receiver&lt;T, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, E&gt; Drop for Sender&lt;T, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, '_&gt; Drop for MutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, '_&gt; Drop for RwLockReadGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, '_&gt; Drop for RwLockWriteGuard&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["drone_cortexm"] = [{"text":"impl&lt;'a, T:&nbsp;TimerStop&gt; Drop for TimerSleep&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;TimerStop, I&gt; Drop for TimerInterval&lt;'a, T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sv, I, Y, R, F&gt; Drop for FiberProc&lt;Sv, I, Y, R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Sv: Switch&lt;Data&lt;I, FiberState&lt;Y, R&gt;&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(I, Yielder&lt;Sv, I, Y, R&gt;) -&gt; R,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Sv, T&gt; Drop for Fiber&lt;Sv, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Sv: SvCall&lt;SwitchBackService&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Sv: SvCall&lt;SwitchContextService&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ProcLoop&lt;Context = Yielder&lt;Sv, T&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Drop for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Drop for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_task"] = [{"text":"impl&lt;T, '_&gt; Drop for LocalFutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Drop for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()