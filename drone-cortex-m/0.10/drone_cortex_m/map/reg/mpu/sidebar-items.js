initSidebarItems({"mod":[["ctrl","Enables the MPU, and when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1."],["rasr","Defines the size and access behavior of the region identified by RNR, and enables that region."],["rbar","Holds the base address of the region identified by RNR. On a write, can also be used to update the base address of a specified region, in the range 0 to 15, updating RNR with the new region number."],["rnr","Selects the region currently accessed by RBAR and RASR."],["type_","The MPU Type Register indicates how many regions the MPU support. Software can use it to determine if the processor implements an MPU."]],"struct":[["Ctrl","Enables the MPU, and when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1."],["Rasr","Defines the size and access behavior of the region identified by RNR, and enables that region."],["Rbar","Holds the base address of the region identified by RNR. On a write, can also be used to update the base address of a specified region, in the range 0 to 15, updating RNR with the new region number."],["Rnr","Selects the region currently accessed by RBAR and RASR."],["Type","The MPU Type Register indicates how many regions the MPU support. Software can use it to determine if the processor implements an MPU."]]});