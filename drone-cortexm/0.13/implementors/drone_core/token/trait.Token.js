(function() {var implementors = {};
implementors["drone_cortexm"] = [{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Cyccnt&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Cp11&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Cp10&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Aspen&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Lspen&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Monrdy&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Bfrdy&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Mmrdy&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Hfrdy&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Thread&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for User&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Lspact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Address&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Ahp&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Dn&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Fz&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Rmode&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Privmask&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Busy&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for TraceBusID&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Gtsfreq&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tsprescale&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Swoena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Txena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Syncena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tsena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Itmena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Unlock&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Iregion&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Dregion&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Separate&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Privdefena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Hfnmiena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Enable&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Region&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Addr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Valid&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Region&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Xn&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Ap&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tex&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for S&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for C&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for B&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Srd&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Size&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Enable&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Implementer&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Variant&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Architecture&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Partno&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Revision&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Nmipendset&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Pendsvset&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Pendsvclr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Pendstset&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Pendstclr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Isrpending&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vectpending&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Rettobase&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vectactive&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tbloff&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vectkey&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Endianess&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Prigroup&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Sysresetreq&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vectclractive&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vectreset&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Seveonpend&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Sleepdeep&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Sleeponexit&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Stkalign&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Bfhfnmign&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Div0Trp&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for UnalignTrp&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Usersetmpend&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Nonbasethrdena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriUsageFault&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriBusFault&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriMemManage&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriSvCall&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriSysTick&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for PriPendSv&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Usgfaultena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Busfaultena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Memfaultena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Svcallpended&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Busfaultpended&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Memfaultpended&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Usgfaultpended&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Systickact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Pendsvact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Monitoract&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Svcallact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Usgfaultact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Busfaultact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Memfaultact&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Mmarvalid&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Mlsperr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Mstkerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Munstkerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Daccviol&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Iaccviol&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Bfarvalid&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Lsperr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Stkerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Unstkerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Impreciserr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Preciserr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Ibuserr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Divbyzero&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Unaligned&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Nocp&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Invpc&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Invstate&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Undefinstr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Debugevt&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Forced&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vecttbl&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for External&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Vcatch&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Dwttrap&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Bkpt&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Halted&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Address&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Address&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Impdef&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Trcena&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for MonReq&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for MonStep&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for MonPend&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for MonEn&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcHarderr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcInterr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcBuserr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcStaterr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcChkerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcNocperr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcMmerr&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for VcCorereset&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Countflag&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Clksource&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tickint&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Enable&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Reload&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Current&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Noref&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Skew&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Tenms&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Swoscaler&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for Txmode&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T:&nbsp;RegTag&gt; Token for Reg&lt;_T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for TrigIn&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;_T&gt; Token for EnFCont&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: RegTag,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()