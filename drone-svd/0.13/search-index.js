var searchIndex = JSON.parse('{\
"anyhow":{"doc":"github crates-io docs-rs","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",0,[[],[["error",3],["result",6]]]],[10,"with_context","","Wrap the error value with additional context that is…",0,[[],[["error",3],["result",6]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string or existing…",null,null],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"from","","",1,[[]]],[11,"next_back","","",2,[[],["option",4]]],[11,"len","","",2,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"clone","","",2,[[],["chain",3]]],[11,"default","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"new","","",2,[[["stderror",8]]]],[11,"new","","Create a new error object from any error type.",1,[[]]],[11,"msg","","Create a new error object from a printable error message.",1,[[]]],[11,"context","","Wrap the error value with additional context.",1,[[]]],[11,"backtrace","","Get the backtrace for this Error.",1,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s…",1,[[],["stderror",8]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result",4]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[],["option",4]]]],"p":[[8,"Context"],[3,"Error"],[3,"Chain"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"drone_svd":{"doc":"CMSIS-SVD parser for Drone, an Embedded Operating System.","i":[[4,"Access","drone_svd","Predefined access rights.",null,null],[13,"WriteOnly","","Read operations have an undefined result. Write access is…",0,null],[13,"ReadOnly","","Read access is permitted. Write operations have an…",0,null],[13,"ReadWrite","","Read and write accesses are permitted. Writes affect the…",0,null],[13,"ReadWriteonce","","Read access is always permitted. Only the first write…",0,null],[3,"Device","","The outermost frame of the description.",null,null],[12,"name","","The string identifies the device or device series.",1,null],[12,"size","","Default bit-width of any register contained in the device.",1,null],[12,"reset_value","","Default value for all registers at RESET.",1,null],[12,"access","","Default access rights for all registers.",1,null],[3,"Field","","Bit-field properties of a register.",null,null],[12,"dim","","Define the number of elements in an array.",2,null],[12,"dim_increment","","Specify the address increment, in Bytes, between two…",2,null],[12,"name","","Name string used to identify the field.",2,null],[12,"description","","String describing the details of the register.",2,null],[12,"bit_offset","","The position of the least significant bit of the field…",2,null],[12,"bit_width","","The bit-width of the bitfield within the register.",2,null],[12,"lsb","","The bit position of the least significant bit within the…",2,null],[12,"msb","","The bit position of the most significant bit within the…",2,null],[12,"access","","The access type.",2,null],[3,"Peripheral","","A peripheral of a device.",null,null],[12,"derived_from","","The peripheral name from which to inherit data.",3,null],[12,"dim","","Define the number of elements in an array.",3,null],[12,"dim_increment","","Specify the address increment, in Bytes, between two…",3,null],[12,"name","","The string identifies the peripheral.",3,null],[12,"description","","The string provides an overview of the purpose and…",3,null],[12,"alternate_peripheral","","A peripheral redefining an address block needs to specify…",3,null],[12,"base_address","","Lowest address reserved or used by the peripheral.",3,null],[12,"size","","Default bit-width of any register contained in the…",3,null],[12,"reset_value","","Default value for all registers in the peripheral at RESET.",3,null],[12,"access","","Default access rights for all registers in the peripheral.",3,null],[3,"Register","","The description of a register.",null,null],[12,"dim","","Define the number of elements in an array.",4,null],[12,"dim_increment","","Specify the address increment, in Bytes, between two…",4,null],[12,"name","","String to identify the register.",4,null],[12,"description","","String describing the details of the register.",4,null],[12,"alternate_register","","This tag can reference a register that has been defined…",4,null],[12,"address_offset","","The address offset relative to the enclosing element.",4,null],[12,"size","","The bit-width of the register.",4,null],[12,"access","","The access rights for the register.",4,null],[12,"reset_value","","The default value for the register at RESET.",4,null],[3,"Config","","Options to configure how bindings are generated.",null,null],[11,"new","","Creates a blank new set of options ready for configuration.",5,[[]]],[11,"exclude_peripherals","","Extends the list of peripherals to exclude from generated…",5,[[]]],[11,"bit_band","","Sets bit-band memory region.",5,[[["range",3]]]],[11,"generate_regs","","Generates register bindings.",5,[[["file",3],["device",3]],["result",6]]],[11,"generate_index","","Generates registers index.",5,[[["file",3],["device",3]],["result",6]]],[5,"parse","","Parse the SVD file at `path`.",null,[[["asref",8],["path",3]],[["result",6],["device",3]]]],[5,"rerun_if_env_changed","","Instructs cargo to rerun the build script when RUSTFLAGS…",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["access",4]]],[11,"clone","","",2,[[],["field",3]]],[11,"clone","","",3,[[],["peripheral",3]]],[11,"clone","","",4,[[],["register",3]]],[11,"clone","","",1,[[],["device",3]]],[11,"default","","",2,[[],["field",3]]],[11,"default","","",3,[[],["peripheral",3]]],[11,"default","","",4,[[],["register",3]]],[11,"eq","","",0,[[["access",4]]]],[11,"eq","","",2,[[["field",3]]]],[11,"ne","","",2,[[["field",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"bit_offset","","Returns the position of the least significant bit of the…",2,[[]]],[11,"bit_width","","Returns the bit-width of the bitfield within the register.",2,[[]]],[11,"reg","","Returns a mutable reference to the register at the path…",3,[[],["register",3]]],[11,"add_reg","","Adds a new register `register`.",3,[[["register",3]]]],[11,"new_reg","","Adds a new register initialized by `f`.",3,[[]]],[11,"remove_reg","","Removes the register at the path `path`.",3,[[],["register",3]]],[11,"field","","Returns a mutable reference to the field with name `name`.",4,[[],["field",3]]],[11,"add_field","","Adds a new field `field`.",4,[[["field",3]]]],[11,"new_field","","Adds a new field initialized by `f`.",4,[[]]],[11,"remove_field","","Removes the field with name `name`.",4,[[],["field",3]]],[11,"new","","Creates a new empty device definition.",1,[[["string",3]]]],[11,"periph_names","","Returns an iterator over all peripheral names.",1,[[]]],[11,"periph","","Returns a mutable reference to the peripheral with name…",1,[[],["peripheral",3]]],[11,"add_periph","","Inserts a new peripheral `peripheral`.",1,[[["peripheral",3]]]],[11,"new_periph","","Inserts a new peripheral initialized by `f`.",1,[[]]],[11,"remove_periph","","Removes the peripheral with name `name`",1,[[],["peripheral",3]]]],"p":[[4,"Access"],[3,"Device"],[3,"Field"],[3,"Peripheral"],[3,"Register"],[3,"Config"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google\'s high-performance…","i":[[0,"raw","hashbrown","Experimental and unsafe `RawTable` API. This module is…",null,null],[3,"Bucket","hashbrown::raw","A reference to a hash table bucket containing a `T`.",null,null],[3,"RawTable","","A raw hash table with an unsafe API.",null,null],[3,"RawIter","","Iterator which returns a raw pointer to every full bucket…",null,null],[3,"RawIntoIter","","Iterator which consumes a table and returns elements.",null,null],[3,"RawDrain","","Iterator which consumes elements without freeing the table…",null,null],[3,"RawIterHash","","Iterator over occupied buckets that could match a given…",null,null],[0,"hash_map","hashbrown","A hash map implemented with quadratic probing and SIMD…",null,null],[4,"DefaultHashBuilder","hashbrown::hash_map","Dummy default hasher for `HashMap`.",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"Iter","","An iterator over the entries of a `HashMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `HashMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `HashMap`.",null,null],[3,"Keys","","An iterator over the keys of a `HashMap`.",null,null],[3,"Values","","An iterator over the values of a `HashMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `HashMap`.",null,null],[3,"DrainFilter","","A draining iterator over entries of a `HashMap` which…",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `HashMap`.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",1,null],[13,"Vacant","","A vacant entry.",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[0,"hash_set","hashbrown","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"Iter","","An iterator over the items of a `HashSet`.",null,null],[3,"IntoIter","","An owning iterator over the items of a `HashSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `HashSet`.",null,null],[3,"DrainFilter","","A draining iterator over entries of a `HashSet` which…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashSet","","A hash set implemented as a `HashMap` where the value is…",null,null],[4,"TryReserveError","","The error type for `try_reserve` methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the…",2,null],[13,"AllocError","","The memory allocator returned an error",2,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",3,null],[11,"from","hashbrown::raw","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","hashbrown::hash_map","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","hashbrown::hash_set","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"into_iter","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"into_iter","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"into_iter","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"into_iter","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","hashbrown","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","hashbrown::hash_map","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",2,[[["formatter",3]],["result",6]]],[11,"eq","hashbrown::hash_map","",11,[[]]],[11,"eq","hashbrown::hash_set","",26,[[]]],[11,"eq","hashbrown","",2,[[["tryreserveerror",4]]]],[11,"ne","","",2,[[["tryreserveerror",4]]]],[11,"drop","hashbrown::raw","",5,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","hashbrown::hash_map","",18,[[]]],[11,"drop","hashbrown::hash_set","",30,[[]]],[11,"index","hashbrown::hash_map","Returns a reference to the value corresponding to the…",11,[[]]],[11,"len","","",12,[[]]],[11,"len","","",13,[[]]],[11,"len","","",14,[[]]],[11,"len","","",15,[[]]],[11,"len","","",16,[[]]],[11,"len","","",19,[[]]],[11,"len","","",17,[[]]],[11,"len","hashbrown::hash_set","",27,[[]]],[11,"len","","",28,[[]]],[11,"len","","",29,[[]]],[11,"from_iter","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"from_iter","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"next","hashbrown::raw","",6,[[],[["option",4],["bucket",3]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["option",4],["bucket",3]]]],[11,"next","hashbrown::hash_map","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","hashbrown::hash_set","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"into_iter","hashbrown::raw","",5,[[],["rawintoiter",3]]],[11,"into_iter","hashbrown::hash_map","Creates a consuming iterator, that is, one that moves each…",11,[[],["intoiter",3]]],[11,"into_iter","hashbrown::hash_set","Creates a consuming iterator, that is, one that moves each…",26,[[],["intoiter",3]]],[11,"extend","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"clone","hashbrown::raw","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone_from","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","hashbrown::hash_map","",11,[[]]],[11,"clone_from","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","hashbrown::hash_set","",26,[[]]],[11,"clone_from","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","hashbrown","",2,[[],["tryreserveerror",4]]],[11,"default","hashbrown::hash_map","Creates an empty `HashMap<K, V, S>`, with the `Default`…",11,[[]]],[11,"default","hashbrown::hash_set","Creates an empty `HashSet<T, S>` with the `Default` value…",26,[[]]],[11,"as_ptr","hashbrown::raw","",4,[[]]],[11,"drop","","",4,[[]]],[11,"read","","",4,[[]]],[11,"write","","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_mut","","",4,[[]]],[11,"copy_from_nonoverlapping","","",4,[[]]],[11,"new","","Creates a new empty hash table without allocating any…",5,[[]]],[11,"try_with_capacity","","Attempts to allocate a new hash table with at least enough…",5,[[],[["tryreserveerror",4],["result",4]]]],[11,"with_capacity","","Allocates a new hash table with at least enough capacity…",5,[[]]],[11,"data_end","","Returns pointer to one past last element of data table.",5,[[],["nonnull",3]]],[11,"bucket_index","","Returns the index of a bucket from a `Bucket`.",5,[[["bucket",3]]]],[11,"bucket","","Returns a pointer to an element in the table.",5,[[],["bucket",3]]],[11,"erase_no_drop","","Erases an element from the table without dropping it.",5,[[["bucket",3]]]],[11,"erase","","Erases an element from the table, dropping it in place.",5,[[["bucket",3]]]],[11,"erase_entry","","Finds and erases an element from the table, dropping it in…",5,[[]]],[11,"remove","","Removes an element from the table, returning it.",5,[[["bucket",3]]]],[11,"remove_entry","","Finds and removes an element from the table, returning it.",5,[[],["option",4]]],[11,"clear_no_drop","","Marks all table buckets as empty without dropping their…",5,[[]]],[11,"clear","","Removes all elements from the table without freeing the…",5,[[]]],[11,"shrink_to","","Shrinks the table to fit `max(self.len(), min_size)`…",5,[[]]],[11,"reserve","","Ensures that at least `additional` items can be inserted…",5,[[]]],[11,"try_reserve","","Tries to ensure that at least `additional` items can be…",5,[[],[["tryreserveerror",4],["result",4]]]],[11,"insert","","Inserts a new element into the table, and returns its raw…",5,[[],["bucket",3]]],[11,"insert_entry","","Inserts a new element into the table, and returns a…",5,[[]]],[11,"insert_no_grow","","Inserts a new element into the table, without growing the…",5,[[],["bucket",3]]],[11,"replace_bucket_with","","Temporary removes a bucket, applying the given function to…",5,[[["bucket",3]]]],[11,"find","","Searches for an element in the table.",5,[[],[["option",4],["bucket",3]]]],[11,"get","","Gets a reference to an element in the table.",5,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to an element in the table.",5,[[],["option",4]]],[11,"capacity","","Returns the number of elements the map can hold without…",5,[[]]],[11,"len","","Returns the number of elements in the table.",5,[[]]],[11,"buckets","","Returns the number of buckets in the table.",5,[[]]],[11,"iter","","Returns an iterator over every element in the table. It is…",5,[[],["rawiter",3]]],[11,"iter_hash","","Returns an iterator over occupied buckets that could match…",5,[[],["rawiterhash",3]]],[11,"drain","","Returns an iterator which removes all elements from the…",5,[[],["rawdrain",3]]],[11,"drain_iter_from","","Returns an iterator which removes all elements from the…",5,[[["rawiter",3]],["rawdrain",3]]],[11,"into_iter_from","","Returns an iterator which consumes all elements from the…",5,[[["rawiter",3]],["rawintoiter",3]]],[11,"clone_from_with_hasher","","Variant of `clone_from` to use when a hasher is available.",5,[[]]],[11,"reflect_remove","","Refresh the iterator so that it reflects a removal from…",6,[[["bucket",3]]]],[11,"reflect_insert","","Refresh the iterator so that it reflects an insertion into…",6,[[["bucket",3]]]],[11,"iter","","",7,[[],["rawiter",3]]],[11,"iter","","",8,[[],["rawiter",3]]],[11,"with_hasher","hashbrown::hash_map","Creates an empty `HashMap` which will use the given hash…",11,[[]]],[11,"with_capacity_and_hasher","","Creates an empty `HashMap` with the specified capacity,…",11,[[]]],[11,"hasher","","Returns a reference to the map\'s `BuildHasher`.",11,[[]]],[11,"capacity","","Returns the number of elements the map can hold without…",11,[[]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The…",11,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The…",11,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary…",11,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary…",11,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",11,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",11,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",11,[[]]],[11,"drain","","Clears the map, returning all key-value pairs as an…",11,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",11,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate,…",11,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",11,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",11,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",11,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",11,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It…",11,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",11,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",11,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",11,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied…",11,[[],["option",4]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",11,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",11,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",11,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",11,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",11,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",11,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",11,[[],["rawentrybuilder",3]]],[11,"from_key","","Creates a `RawEntryMut` from the given key.",20,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a `RawEntryMut` from the given key and its hash.",20,[[],["rawentrymut",4]]],[11,"from_hash","","Creates a `RawEntryMut` from the given hash.",20,[[],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",23,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",23,[[],["option",4]]],[11,"from_hash","","Access an entry by hash.",23,[[],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a…",0,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",0,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the…",0,[[]]],[11,"key","","Gets a reference to the key in the entry.",21,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",21,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in…",21,[[]]],[11,"get","","Gets a reference to the value in the entry.",21,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",21,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",21,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",21,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the entry.",21,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to the…",21,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",21,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old…",21,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",21,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",21,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the…",21,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",22,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key,…",22,[[]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",22,[[]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",1,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",1,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",1,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty,…",1,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",1,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",1,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the…",1,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",1,[[]]],[11,"key","","Gets a reference to the key in the entry.",24,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",24,[[]]],[11,"get","","Gets a reference to the value in the entry.",24,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",24,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",24,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",24,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The…",24,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to…",24,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the…",24,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when…",25,[[]]],[11,"into_key","","Take ownership of the key.",25,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",25,[[]]],[11,"with_hasher","hashbrown::hash_set","Creates a new empty hash set which will use the given…",26,[[]]],[11,"with_capacity_and_hasher","","Creates an empty `HashSet` with the specified capacity,…",26,[[]]],[11,"capacity","","Returns the number of elements the set can hold without…",26,[[]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The…",26,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",26,[[]]],[11,"is_empty","","Returns `true` if the set contains no elements.",26,[[]]],[11,"drain","","Clears the set, returning all elements in an iterator.",26,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",26,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate,…",26,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",26,[[]]],[11,"hasher","","Returns a reference to the set\'s `BuildHasher`.",26,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",26,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",26,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",26,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It…",26,[[]]],[11,"difference","","Visits the values representing the difference, i.e., the…",26,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",26,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",26,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the…",26,[[],["union",3]]],[11,"contains","","Returns `true` if the set contains a value.",26,[[]]],[11,"get","","Returns a reference to the value in the set, if any, that…",26,[[],["option",4]]],[11,"get_or_insert","","Inserts the given `value` into the set if it is not…",26,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given `value` into the set if…",26,[[]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the set if the…",26,[[]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",26,[[]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",26,[[]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",26,[[]]],[11,"insert","","Adds a value to the set.",26,[[]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",26,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value…",26,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",26,[[],["option",4]]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"RawIterHash"],[4,"DefaultHashBuilder"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"indexmap":{"doc":"`IndexMap` is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[8,"MutableKeys","indexmap::map","Opt-in mutable access to keys.",null,null],[16,"Key","","",0,null],[16,"Value","","",0,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",0,[[],["option",4]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",0,[[]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",0,[[],["privatemarker",3]]],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",1,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"IndexMap","","A hash table where the iteration order of the key-value…",null,null],[11,"new","","Create a new map. (Does not allocate.)",2,[[]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",2,[[]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",2,[[]]],[11,"with_hasher","","Create a new map with `hash_builder`",2,[[]]],[11,"capacity","","Computes in O(1) time.",2,[[]]],[11,"hasher","","Return a reference to the map\'s `BuildHasher`.",2,[[]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",2,[[],["iter",3]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",2,[[],["itermut",3]]],[11,"keys","","Return an iterator over the keys of the map, in their order",2,[[],["keys",3]]],[11,"values","","Return an iterator over the values of the map, in their…",2,[[],["values",3]]],[11,"values_mut","","Return an iterator over mutable references to the the…",2,[[],["valuesmut",3]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",2,[[]]],[11,"drain","","Clears the `IndexMap` in the given index range, returning…",2,[[],["drain",3]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",2,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the map as much as possible.",2,[[]]],[11,"insert","","Insert a key-value pair in the map.",2,[[],["option",4]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",2,[[],["entry",4]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",2,[[]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",2,[[],["option",4]]],[11,"get_key_value","","Return references to the key-value pair stored for `key`,…",2,[[],["option",4]]],[11,"get_full","","Return item index, key and value",2,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the map",2,[[],["option",4]]],[11,"get_mut","","",2,[[],["option",4]]],[11,"get_full_mut","","",2,[[],["option",4]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",2,[[],["option",4]]],[11,"remove_entry","","Remove and return the key-value pair equivalent to `key`.",2,[[],["option",4]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[],["option",4]]],[11,"swap_remove_entry","","Remove and return the key-value pair equivalent to `key`.",2,[[],["option",4]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[],["option",4]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[],["option",4]]],[11,"shift_remove_entry","","Remove and return the key-value pair equivalent to `key`.",2,[[],["option",4]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[],["option",4]]],[11,"pop","","Remove the last key-value pair",2,[[],["option",4]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",2,[[]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",2,[[]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",2,[[]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",2,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the map’s key-value pairs in place.",2,[[]]],[11,"get_index","","Get a key-value pair by index",2,[[],["option",4]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[],["option",4]]],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[11,"new","","Create a new set. (Does not allocate.)",3,[[]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",3,[[]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",3,[[]]],[11,"with_hasher","","Create a new set with `hash_builder`",3,[[]]],[11,"capacity","","Computes in O(1) time.",3,[[]]],[11,"hasher","","Return a reference to the set\'s `BuildHasher`.",3,[[]]],[11,"len","","Return the number of elements in the set.",3,[[]]],[11,"is_empty","","Returns true if the set contains no elements.",3,[[]]],[11,"iter","","Return an iterator over the values of the set, in their…",3,[[],["iter",3]]],[11,"clear","","Remove all elements in the set, while preserving its…",3,[[]]],[11,"drain","","Clears the `IndexSet` in the given index range, returning…",3,[[],["drain",3]]],[11,"reserve","","Reserve capacity for `additional` more values.",3,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the set as much as possible.",3,[[]]],[11,"insert","","Insert the value into the set.",3,[[]]],[11,"insert_full","","Insert the value into the set, and get its index.",3,[[]]],[11,"difference","","Return an iterator over the values that are in `self` but…",3,[[["indexset",3]],["difference",3]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",3,[[["indexset",3]],["symmetricdifference",3]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",3,[[["indexset",3]],["intersection",3]]],[11,"union","","Return an iterator over all values that are in `self` or…",3,[[["indexset",3]],["union",3]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",3,[[]]],[11,"get","","Return a reference to the value stored in the set, if it…",3,[[],["option",4]]],[11,"get_full","","Return item index and value",3,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the set",3,[[],["option",4]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",3,[[],["option",4]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",3,[[]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",3,[[]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",3,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",3,[[],["option",4]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",3,[[],["option",4]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",3,[[],["option",4]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",3,[[],["option",4]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",3,[[],["option",4]]],[11,"pop","","Remove the last value",3,[[],["option",4]]],[11,"retain","","Scan through each value in the set and keep those where…",3,[[]]],[11,"sort","","Sort the set’s values by their default ordering.",3,[[]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",3,[[]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",3,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the set’s values in place.",3,[[]]],[11,"get_index","","Get a value by index",3,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",3,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",3,[[],["option",4]]],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",3,[[["indexset",3]]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",3,[[["indexset",3]]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",3,[[["indexset",3]]]],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",4,[[]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","indexmap::set","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"get_full_mut2","indexmap::map","",2,[[],["option",4]]],[11,"retain2","","",2,[[]]],[11,"__private_marker","","",2,[[],["privatemarker",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","indexmap::set","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"eq","indexmap::map","",2,[[["indexmap",3]]]],[11,"eq","indexmap::set","",3,[[["indexset",3]]]],[11,"index","indexmap::map","Returns a reference to the value corresponding to the…",2,[[]]],[11,"index","","Returns a reference to the value at the supplied `index`.",2,[[]]],[11,"index","indexmap::set","Returns a reference to the value at the supplied `index`.",3,[[]]],[11,"index_mut","indexmap::map","Returns a mutable reference to the value corresponding to…",2,[[]]],[11,"index_mut","","Returns a mutable reference to the value at the supplied…",2,[[]]],[11,"len","","",7,[[]]],[11,"len","","",8,[[]]],[11,"len","","",9,[[]]],[11,"len","","",10,[[]]],[11,"len","","",11,[[]]],[11,"len","","",12,[[]]],[11,"len","indexmap::set","",14,[[]]],[11,"len","","",15,[[]]],[11,"from_iter","indexmap::map","Create an `IndexMap` from the sequence of key-value pairs…",2,[[["intoiterator",8]]]],[11,"from_iter","indexmap::set","",3,[[["intoiterator",8]]]],[11,"next_back","indexmap::map","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","indexmap::set","",14,[[],["option",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next","indexmap::map","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[]]],[11,"nth","","",7,[[],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"collect","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"collect","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[]]],[11,"nth","","",9,[[],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"collect","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[]]],[11,"nth","","",10,[[],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"collect","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[]]],[11,"nth","","",11,[[],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"collect","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[]]],[11,"nth","","",12,[[],["option",4]]],[11,"last","","",12,[[],["option",4]]],[11,"collect","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[]]],[11,"nth","","",13,[[],["option",4]]],[11,"last","","",13,[[],["option",4]]],[11,"collect","","",13,[[]]],[11,"next","indexmap::set","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"count","","",14,[[]]],[11,"nth","","",14,[[],["option",4]]],[11,"last","","",14,[[],["option",4]]],[11,"collect","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"count","","",15,[[]]],[11,"nth","","",15,[[],["option",4]]],[11,"last","","",15,[[],["option",4]]],[11,"collect","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"count","","",16,[[]]],[11,"nth","","",16,[[],["option",4]]],[11,"last","","",16,[[],["option",4]]],[11,"collect","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",3,[[]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","indexmap::set","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","indexmap::map","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[]]],[11,"clone","indexmap::set","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"default","indexmap::map","Return an empty `IndexMap`",2,[[]]],[11,"default","indexmap::set","Return an empty `IndexSet`",3,[[]]],[11,"key","indexmap::map","",5,[[]]],[11,"get","","",5,[[]]],[11,"get_mut","","",5,[[]]],[11,"index","","Return the index of the key-value pair",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",5,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",5,[[]]],[11,"or_insert","","Computes in O(1) time (amortized average).",1,[[]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",1,[[]]],[11,"key","","",1,[[]]],[11,"index","","Return the index where the key-value pair exists or will…",1,[[]]],[11,"and_modify","","Modifies the entry if it is occupied.",1,[[]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",1,[[]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",5,[[]]],[11,"remove","","Remove the key, value pair stored in the map for this…",5,[[]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",5,[[]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",5,[[]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",5,[[]]],[11,"key","","",6,[[]]],[11,"into_key","","",6,[[]]],[11,"index","","Return the index where the key-value pair will be inserted.",6,[[]]],[11,"insert","","",6,[[]]]],"p":[[8,"MutableKeys"],[4,"Entry"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["option",4],["level",4]]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[]]],[11,"module_path","","The module path of the message.",2,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",2,[[],["option",4]]],[11,"file","","The source file containing the message.",2,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",2,[[],["option",4]]],[11,"line","","The line containing the message.",2,[[],["option",4]]],[3,"RecordBuilder","","Builder for `Record`.",null,null],[11,"new","","Construct new `RecordBuilder`.",3,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",3,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",3,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",3,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",3,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",3,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",3,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[]]],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[11,"new","","Construct a new `MetadataBuilder`.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",5,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",6,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",4,[[["metadata",3]]]],[11,"ne","","",4,[[["metadata",3]]]],[11,"eq","","",5,[[["metadatabuilder",3]]]],[11,"ne","","",5,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]]]],[11,"le","","",4,[[["metadata",3]]]],[11,"gt","","",4,[[["metadata",3]]]],[11,"ge","","",4,[[["metadata",3]]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]]]],[11,"le","","",5,[[["metadatabuilder",3]]]],[11,"gt","","",5,[[["metadatabuilder",3]]]],[11,"ge","","",5,[[["metadatabuilder",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[],[["level",4],["result",4]]]],[11,"from_str","","",1,[[],[["levelfilter",4],["result",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[0,"token_stream","proc_macro2","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[11,"new","","Returns an empty `TokenStream` containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",0,[[]]],[3,"Span","","A region of source code, along with macro expansion…",null,null],[11,"call_site","","The span of the invocation of the current procedural macro.",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",1,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",2,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",2,null],[11,"span","","Returns the span of this tree, delegating to the `span`…",2,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",3,null],[13,"Brace","","`{ ... }`",3,null],[13,"Bracket","","`[ ... ]`",3,null],[13,"None","","`Ø ... Ø`",3,null],[11,"new","","Creates a new `Group` with the given delimiter and token…",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",4,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",4,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",4,[[["span",3]]]],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",5,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",5,null],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]]]],[11,"eq","","",5,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[],[["result",4],["tokenstream",3],["lexerror",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"serde":{"doc":"SerdeSerde is a framework for serializing and…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[11,"new","","Create a new borrowed deserializer from the given byte…",1,[[],["borrowedbytesdeserializer",3]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",2,[[]]],[11,"end","","Check for remaining elements after passing a…",2,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",3,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new `MapDeserializer<I, E>`.",4,[[]]],[11,"end","","Check for remaining elements after passing a…",4,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",5,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",6,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",6,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",6,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",6,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",6,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",6,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",6,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",6,[[]]],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",7,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",7,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",7,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",7,null],[13,"Char","","The input contained a `char` that was not expected.",7,null],[13,"Str","","The input contained a `&str` or `String` that was not…",7,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",7,null],[13,"Unit","","The input contained a unit `()` that was not expected.",7,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",7,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",7,null],[13,"Seq","","The input contained a sequence that was not expected.",7,null],[13,"Map","","The input contained a map that was not expected.",7,null],[13,"Enum","","The input contained an enum that was not expected.",7,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",7,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",7,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",7,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",7,null],[13,"Other","","A message stating what uncategorized thing the input…",7,null],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",12,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",12,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",12,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",12,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",12,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",12,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",12,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",12,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",12,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",12,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",12,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",12,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",12,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a `Serialize` implementation encounters any…",18,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"from","serde::de::value","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","serde::de","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",49,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",29,[[],["result",4]]],[11,"deserialize_i8","","",29,[[],["result",4]]],[11,"deserialize_i16","","",29,[[],["result",4]]],[11,"deserialize_i32","","",29,[[],["result",4]]],[11,"deserialize_i64","","",29,[[],["result",4]]],[11,"deserialize_i128","","",29,[[],["result",4]]],[11,"deserialize_u8","","",29,[[],["result",4]]],[11,"deserialize_u16","","",29,[[],["result",4]]],[11,"deserialize_u32","","",29,[[],["result",4]]],[11,"deserialize_u64","","",29,[[],["result",4]]],[11,"deserialize_u128","","",29,[[],["result",4]]],[11,"deserialize_f32","","",29,[[],["result",4]]],[11,"deserialize_f64","","",29,[[],["result",4]]],[11,"deserialize_char","","",29,[[],["result",4]]],[11,"deserialize_str","","",29,[[],["result",4]]],[11,"deserialize_string","","",29,[[],["result",4]]],[11,"deserialize_bytes","","",29,[[],["result",4]]],[11,"deserialize_byte_buf","","",29,[[],["result",4]]],[11,"deserialize_unit","","",29,[[],["result",4]]],[11,"deserialize_unit_struct","","",29,[[],["result",4]]],[11,"deserialize_newtype_struct","","",29,[[],["result",4]]],[11,"deserialize_seq","","",29,[[],["result",4]]],[11,"deserialize_tuple","","",29,[[],["result",4]]],[11,"deserialize_tuple_struct","","",29,[[],["result",4]]],[11,"deserialize_map","","",29,[[],["result",4]]],[11,"deserialize_struct","","",29,[[],["result",4]]],[11,"deserialize_enum","","",29,[[],["result",4]]],[11,"deserialize_identifier","","",29,[[],["result",4]]],[11,"deserialize_ignored_any","","",29,[[],["result",4]]],[11,"deserialize_any","","",29,[[],["result",4]]],[11,"deserialize_option","","",29,[[],["result",4]]],[11,"deserialize_bool","","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[],["result",4]]],[11,"deserialize_enum","","",30,[[],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"expecting","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",49,[[],["result",4]]],[11,"visit_i64","","",49,[[],["result",4]]],[11,"visit_u64","","",49,[[],["result",4]]],[11,"visit_f64","","",49,[[],["result",4]]],[11,"visit_str","","",49,[[],["result",4]]],[11,"visit_none","","",49,[[],["result",4]]],[11,"visit_some","","",49,[[],["result",4]]],[11,"visit_newtype_struct","","",49,[[],["result",4]]],[11,"visit_unit","","",49,[[],["result",4]]],[11,"visit_seq","","",49,[[],["result",4]]],[11,"visit_map","","",49,[[],["result",4]]],[11,"visit_bytes","","",49,[[],["result",4]]],[11,"visit_enum","","",49,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",2,[[],[["result",4],["option",4]]]],[11,"size_hint","","",2,[[],["option",4]]],[11,"next_element_seed","","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"next_key_seed","","",4,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",4,[[],["result",4]]],[11,"next_entry_seed","","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"variant_seed","","",45,[[],["result",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",5,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",28,[[]]],[11,"custom","","",28,[[]]],[11,"clone","","",28,[[],["error",3]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["seqdeserializer",3]]],[11,"clone","","",3,[[],["seqaccessdeserializer",3]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",49,[[],["ignoredany",3]]],[11,"clone","","",7,[[],["unexpected",4]]],[11,"default","","",49,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",28,[[["error",3]]]],[11,"ne","","",28,[[["error",3]]]],[11,"eq","serde::de","",7,[[["unexpected",4]]]],[11,"ne","","",7,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","serde::de","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",28,[[]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_xml_rs":{"doc":"Examples","i":[[3,"EventReader","serde_xml_rs","A wrapper around an `std::io::Read` instance which…",null,null],[3,"ParserConfig","","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace in textual events be…",0,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to…",0,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.…",0,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",0,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be…",0,null],[12,"extra_entities","","A map of extra entities recognized by the parser. Default…",0,null],[12,"ignore_end_of_stream","","Whether or not the parser should ignore the end of stream.…",0,null],[12,"replace_unknown_entity_references","","Whether or not non-unicode entity references get replaced…",0,null],[12,"ignore_root_level_whitespace","","Whether or not whitespace at the root level of the…",0,null],[0,"de","","",null,null],[5,"from_str","serde_xml_rs::de","A convenience method for deserialize some object from a…",null,[[],[["result",4],["deserialize",8],["error",4]]]],[5,"from_reader","","A convenience method for deserialize some object from a…",null,[[["read",8]],[["result",4],["deserialize",8],["error",4]]]],[3,"Deserializer","","",null,null],[11,"new","","",1,[[["eventreader",3]]]],[11,"new_from_reader","","",1,[[]]],[11,"unset_map_value","","",1,[[]]],[0,"ser","serde_xml_rs","",null,null],[5,"to_writer","serde_xml_rs::ser","A convenience method for serializing some object to a…",null,[[["write",8]],[["result",4],["error",4]]]],[5,"to_string","","A convenience method for serializing some object to a…",null,[[],[["result",4],["string",3],["error",4]]]],[3,"Serializer","","An XML `Serializer`.",null,null],[11,"new","","",2,[[]]],[4,"Error","serde_xml_rs","",null,null],[13,"UnexpectedToken","","",3,null],[12,"token","serde_xml_rs::Error","",4,null],[12,"found","","",4,null],[13,"Custom","serde_xml_rs","",3,null],[12,"field","serde_xml_rs::Error","",5,null],[13,"UnsupportedOperation","serde_xml_rs","",3,null],[12,"operation","serde_xml_rs::Error","",6,null],[13,"Io","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",7,null],[13,"FromUtf8Error","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",8,null],[13,"ParseIntError","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",9,null],[13,"ParseFloatError","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",10,null],[13,"ParseBoolError","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",11,null],[13,"Syntax","serde_xml_rs","",3,null],[12,"source","serde_xml_rs::Error","",12,null],[11,"from","serde_xml_rs","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_xml_rs::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","serde_xml_rs::ser","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","serde_xml_rs","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",0,[[["parserconfig",3]]]],[11,"ne","","",0,[[["parserconfig",3]]]],[11,"position","","Returns the position of the last event produced by the…",13,[[],["textposition",3]]],[11,"default","","",0,[[],["parserconfig",3]]],[11,"into_iter","","",13,[[],["events",3]]],[11,"clone","","",0,[[],["parserconfig",3]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["fromutf8error",3]]]],[11,"from","","",3,[[["parseinterror",3]]]],[11,"from","","",3,[[["parsefloaterror",3]]]],[11,"from","","",3,[[["parseboolerror",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"custom","","",3,[[["display",8]]]],[11,"custom","","",3,[[["display",8]]]],[11,"new","","Creates a new reader, consuming the given stream.",13,[[],["eventreader",3]]],[11,"new_with_config","","Creates a new reader with the provded configuration,…",13,[[["parserconfig",3]],["eventreader",3]]],[11,"next","","Pulls and returns next XML event from the stream.",13,[[],[["xmlevent",4],["result",4],["error",3]]]],[11,"source","","",13,[[]]],[11,"source_mut","","",13,[[]]],[11,"into_inner","","Unwraps this `EventReader`, returning the underlying reader.",13,[[]]],[11,"from_str","","A convenience method to create an `XmlReader` from a…",13,[[],["eventreader",3]]],[11,"new","","Returns a new config with default values.",0,[[],["parserconfig",3]]],[11,"create_reader","","Creates an XML reader with this configuration.",0,[[],["eventreader",3]]],[11,"add_entity","","Adds a new entity mapping and returns an updated config…",0,[[],["parserconfig",3]]],[11,"trim_whitespace","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"ignore_comments","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"coalesce_characters","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"ignore_end_of_stream","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"replace_unknown_entity_references","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]],[11,"ignore_root_level_whitespace","","Sets the field to the provided value and returns updated…",0,[[],["parserconfig",3]]]],"p":[[3,"ParserConfig"],[3,"Deserializer"],[3,"Serializer"],[4,"Error"],[13,"UnexpectedToken"],[13,"Custom"],[13,"UnsupportedOperation"],[13,"Io"],[13,"FromUtf8Error"],[13,"ParseIntError"],[13,"ParseFloatError"],[13,"ParseBoolError"],[13,"Syntax"],[3,"EventReader"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","`_`",null,null],[12,"spans","","",0,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",1,null],[3,"As","","`as`",null,null],[12,"span","","",2,null],[3,"Async","","`async`",null,null],[12,"span","","",3,null],[3,"Auto","","`auto`",null,null],[12,"span","","",4,null],[3,"Await","","`await`",null,null],[12,"span","","",5,null],[3,"Become","","`become`",null,null],[12,"span","","",6,null],[3,"Box","","`box`",null,null],[12,"span","","",7,null],[3,"Break","","`break`",null,null],[12,"span","","",8,null],[3,"Const","","`const`",null,null],[12,"span","","",9,null],[3,"Continue","","`continue`",null,null],[12,"span","","",10,null],[3,"Crate","","`crate`",null,null],[12,"span","","",11,null],[3,"Default","","`default`",null,null],[12,"span","","",12,null],[3,"Do","","`do`",null,null],[12,"span","","",13,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",14,null],[3,"Else","","`else`",null,null],[12,"span","","",15,null],[3,"Enum","","`enum`",null,null],[12,"span","","",16,null],[3,"Extern","","`extern`",null,null],[12,"span","","",17,null],[3,"Final","","`final`",null,null],[12,"span","","",18,null],[3,"Fn","","`fn`",null,null],[12,"span","","",19,null],[3,"For","","`for`",null,null],[12,"span","","",20,null],[3,"If","","`if`",null,null],[12,"span","","",21,null],[3,"Impl","","`impl`",null,null],[12,"span","","",22,null],[3,"In","","`in`",null,null],[12,"span","","",23,null],[3,"Let","","`let`",null,null],[12,"span","","",24,null],[3,"Loop","","`loop`",null,null],[12,"span","","",25,null],[3,"Macro","","`macro`",null,null],[12,"span","","",26,null],[3,"Match","","`match`",null,null],[12,"span","","",27,null],[3,"Mod","","`mod`",null,null],[12,"span","","",28,null],[3,"Move","","`move`",null,null],[12,"span","","",29,null],[3,"Mut","","`mut`",null,null],[12,"span","","",30,null],[3,"Override","","`override`",null,null],[12,"span","","",31,null],[3,"Priv","","`priv`",null,null],[12,"span","","",32,null],[3,"Pub","","`pub`",null,null],[12,"span","","",33,null],[3,"Ref","","`ref`",null,null],[12,"span","","",34,null],[3,"Return","","`return`",null,null],[12,"span","","",35,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",36,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",37,null],[3,"Static","","`static`",null,null],[12,"span","","",38,null],[3,"Struct","","`struct`",null,null],[12,"span","","",39,null],[3,"Super","","`super`",null,null],[12,"span","","",40,null],[3,"Trait","","`trait`",null,null],[12,"span","","",41,null],[3,"Try","","`try`",null,null],[12,"span","","",42,null],[3,"Type","","`type`",null,null],[12,"span","","",43,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",44,null],[3,"Union","","`union`",null,null],[12,"span","","",45,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",46,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",47,null],[3,"Use","","`use`",null,null],[12,"span","","",48,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",49,null],[3,"Where","","`where`",null,null],[12,"span","","",50,null],[3,"While","","`while`",null,null],[12,"span","","",51,null],[3,"Yield","","`yield`",null,null],[12,"span","","",52,null],[3,"Add","","`+`",null,null],[12,"spans","","",53,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",54,null],[3,"And","","`&`",null,null],[12,"spans","","",55,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",56,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",57,null],[3,"At","","`@`",null,null],[12,"spans","","",58,null],[3,"Bang","","`!`",null,null],[12,"spans","","",59,null],[3,"Caret","","`^`",null,null],[12,"spans","","",60,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",61,null],[3,"Colon","","`:`",null,null],[12,"spans","","",62,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",63,null],[3,"Comma","","`,`",null,null],[12,"spans","","",64,null],[3,"Div","","`/`",null,null],[12,"spans","","",65,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",66,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",67,null],[3,"Dot","","`.`",null,null],[12,"spans","","",68,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",69,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",71,null],[3,"Eq","","`=`",null,null],[12,"spans","","",72,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",73,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",74,null],[3,"Gt","","`>`",null,null],[12,"spans","","",75,null],[3,"Le","","`<=`",null,null],[12,"spans","","",76,null],[3,"Lt","","`<`",null,null],[12,"spans","","",77,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",78,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",79,null],[3,"Or","","`|`",null,null],[12,"spans","","",80,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",81,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",82,null],[3,"Pound","","`#`",null,null],[12,"spans","","",83,null],[3,"Question","","`?`",null,null],[12,"spans","","",84,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",85,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",86,null],[3,"Rem","","`%`",null,null],[12,"spans","","",87,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",88,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",89,null],[3,"Semi","","`;`",null,null],[12,"spans","","",90,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",91,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",92,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",93,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",94,null],[3,"Star","","`*`",null,null],[12,"spans","","",95,null],[3,"Sub","","`-`",null,null],[12,"spans","","",96,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",97,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",98,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","`[...]`",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","`(...)`",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",104,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",104,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",105,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",106,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",106,[[]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",106,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",106,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"insert","","Inserts an element at position `index`.",106,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",107,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",110,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",111,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse…",112,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",113,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",113,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",113,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",113,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",113,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",113,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",113,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",113,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",113,[[]]],[11,"error","","Triggers an error at the current position of the parse…",113,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",113,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",113,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",113,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",114,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",114,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",114,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",114,[[],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[11,"new","","Usually the `ParseStream::error` method will be used…",115,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",115,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",115,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",115,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",115,[[["error",3]]]],[4,"AttrStyle","syn","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",116,null],[13,"Inner","","",116,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",117,null],[12,"style","","",117,null],[12,"bracket_token","","",117,null],[12,"path","","",117,null],[12,"tokens","","",117,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",118,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",118,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",118,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",119,null],[12,"paren_token","","",119,null],[12,"nested","","",119,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",120,null],[12,"eq_token","","",120,null],[12,"lit","","",120,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",121,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",121,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",122,null],[12,"vis","","Visibility of the field.",122,null],[12,"ident","","Name of the field, if any.",122,null],[12,"colon_token","","",122,null],[12,"ty","","Type of the field.",122,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",123,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",123,null],[13,"Unit","","Unit struct or unit variant such as `None`.",123,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",124,null],[12,"named","","",124,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",125,null],[12,"unnamed","","",125,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",126,null],[12,"ident","","Name of the variant.",126,null],[12,"fields","","Content stored in the variant.",126,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",126,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",127,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",128,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",129,null],[12,"paren_token","","",129,null],[12,"in_token","","",129,null],[12,"path","","",129,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",130,null],[13,"Crate","","A crate-level visibility: `crate`.",130,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",130,null],[13,"Inherited","","An inherited visibility, which usually means private.",130,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",131,null],[13,"Assign","","An assignment expression: `a = compute()`.",131,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",131,null],[13,"Async","","An async block: `async { ... }`.",131,null],[13,"Await","","An await expression: `fut.await`.",131,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",131,null],[13,"Block","","A blocked scope: `{ ... }`.",131,null],[13,"Box","","A box expression: `box f`.",131,null],[13,"Break","","A `break`, with an optional label to break and an optional…",131,null],[13,"Call","","A function call expression: `invoke(a, b)`.",131,null],[13,"Cast","","A cast expression: `foo as f64`.",131,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",131,null],[13,"Continue","","A `continue`, with an optional label.",131,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",131,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",131,null],[13,"Group","","An expression contained within invisible delimiters.",131,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",131,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",131,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",131,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",131,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",131,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",131,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",131,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",131,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",131,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",131,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",131,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",131,null],[13,"Repeat","","An array literal constructed from one repeated element:…",131,null],[13,"Return","","A `return`, with an optional value to be returned.",131,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",131,null],[13,"Try","","A try-expression: `expr?`.",131,null],[13,"TryBlock","","A try block: `try { ... }`.",131,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",131,null],[13,"Type","","A type ascription expression: `foo: f64`.",131,null],[13,"Unary","","A unary operation: `!x`, `*x`.",131,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",131,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",131,null],[13,"While","","A while loop: `while expr { ... }`.",131,null],[13,"Yield","","A yield expression: `yield expr`.",131,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",132,null],[12,"left","","",132,null],[12,"op","","",132,null],[12,"right","","",132,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",133,null],[12,"func","","",133,null],[12,"paren_token","","",133,null],[12,"args","","",133,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",134,null],[12,"expr","","",134,null],[12,"as_token","","",134,null],[12,"ty","","",134,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",135,null],[12,"base","","",135,null],[12,"dot_token","","",135,null],[12,"member","","",135,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",136,null],[12,"expr","","",136,null],[12,"bracket_token","","",136,null],[12,"index","","",136,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",137,null],[12,"lit","","",137,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"expr","","",138,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",139,null],[12,"qself","","",139,null],[12,"path","","",139,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",140,null],[12,"op","","",140,null],[12,"expr","","",140,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",141,null],[12,"span","","",141,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",142,null],[13,"Unnamed","","An unnamed field like `self.0`.",142,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",143,null],[12,"lt_token","","",143,null],[12,"lifetimes","","",143,null],[12,"gt_token","","",143,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",144,null],[12,"const_token","","",144,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"ty","","",144,null],[12,"eq_token","","",144,null],[12,"default","","",144,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",145,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",145,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",145,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",146,null],[12,"params","","",146,null],[12,"gt_token","","",146,null],[12,"where_clause","","",146,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",147,null],[12,"lifetime","","",147,null],[12,"colon_token","","",147,null],[12,"bounds","","",147,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",148,null],[12,"eq_token","","",148,null],[12,"rhs_ty","","",148,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",149,null],[12,"colon_token","","",149,null],[12,"bounds","","",149,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",150,null],[12,"bounded_ty","","The type being bounded",150,null],[12,"colon_token","","",150,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",150,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",151,null],[12,"modifier","","",151,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",151,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",151,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",152,null],[13,"Maybe","","",152,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",153,null],[12,"ident","","",153,null],[12,"colon_token","","",153,null],[12,"bounds","","",153,null],[12,"eq_token","","",153,null],[12,"default","","",153,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",154,null],[13,"Lifetime","","",154,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",155,null],[12,"predicates","","",155,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",156,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",156,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",156,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",157,null],[12,"ident","","",157,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",158,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",158,null],[13,"Byte","","A byte literal: `b\'f\'`.",158,null],[13,"Char","","A character literal: `\'a\'`.",158,null],[13,"Int","","An integer literal: `1` or `1u16`.",158,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",158,null],[13,"Bool","","A boolean literal: `true` or `false`.",158,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",158,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",159,null],[12,"span","","",159,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",160,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",160,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",161,null],[12,"bang_token","","",161,null],[12,"delimiter","","",161,null],[12,"tokens","","",161,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",162,null],[13,"Brace","","",162,null],[13,"Bracket","","",162,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",163,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",163,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",163,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",164,null],[12,"brace_token","","",164,null],[12,"variants","","",164,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",165,null],[12,"fields","","",165,null],[12,"semi_token","","",165,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",166,null],[12,"fields","","",166,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",167,null],[12,"vis","","Visibility of the struct or enum.",167,null],[12,"ident","","Name of the struct or enum.",167,null],[12,"generics","","Generics required to complete the definition.",167,null],[12,"data","","Data within the struct or enum.",167,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",168,null],[13,"Sub","","The `-` operator (subtraction)",168,null],[13,"Mul","","The `*` operator (multiplication)",168,null],[13,"Div","","The `/` operator (division)",168,null],[13,"Rem","","The `%` operator (modulus)",168,null],[13,"And","","The `&&` operator (logical and)",168,null],[13,"Or","","The `||` operator (logical or)",168,null],[13,"BitXor","","The `^` operator (bitwise xor)",168,null],[13,"BitAnd","","The `&` operator (bitwise and)",168,null],[13,"BitOr","","The `|` operator (bitwise or)",168,null],[13,"Shl","","The `<<` operator (shift left)",168,null],[13,"Shr","","The `>>` operator (shift right)",168,null],[13,"Eq","","The `==` operator (equality)",168,null],[13,"Lt","","The `<` operator (less than)",168,null],[13,"Le","","The `<=` operator (less than or equal to)",168,null],[13,"Ne","","The `!=` operator (not equal to)",168,null],[13,"Ge","","The `>=` operator (greater than or equal to)",168,null],[13,"Gt","","The `>` operator (greater than)",168,null],[13,"AddEq","","The `+=` operator",168,null],[13,"SubEq","","The `-=` operator",168,null],[13,"MulEq","","The `*=` operator",168,null],[13,"DivEq","","The `/=` operator",168,null],[13,"RemEq","","The `%=` operator",168,null],[13,"BitXorEq","","The `^=` operator",168,null],[13,"BitAndEq","","The `&=` operator",168,null],[13,"BitOrEq","","The `|=` operator",168,null],[13,"ShlEq","","The `<<=` operator",168,null],[13,"ShrEq","","The `>>=` operator",168,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",169,null],[13,"Not","","The `!` operator for logical inversion",169,null],[13,"Neg","","The `-` operator for negation",169,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",170,null],[12,"name","","",170,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",171,null],[12,"name","","",171,null],[12,"ty","","",171,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",172,null],[13,"Type","","A particular type is returned.",172,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",173,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",173,null],[13,"Group","","A type contained within invisible delimiters.",173,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",173,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",173,null],[13,"Macro","","A macro in the type position.",173,null],[13,"Never","","The never type: `!`.",173,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",173,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",173,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",173,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",173,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",173,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",173,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",173,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",173,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",174,null],[12,"elem","","",174,null],[12,"semi_token","","",174,null],[12,"len","","",174,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",175,null],[12,"unsafety","","",175,null],[12,"abi","","",175,null],[12,"fn_token","","",175,null],[12,"paren_token","","",175,null],[12,"inputs","","",175,null],[12,"variadic","","",175,null],[12,"output","","",175,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",176,null],[12,"elem","","",176,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",177,null],[12,"bounds","","",177,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",178,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",179,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",180,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",181,null],[12,"elem","","",181,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",182,null],[12,"path","","",182,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",183,null],[12,"const_token","","",183,null],[12,"mutability","","",183,null],[12,"elem","","",183,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",184,null],[12,"lifetime","","",184,null],[12,"mutability","","",184,null],[12,"elem","","",184,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",185,null],[12,"elem","","",185,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",186,null],[12,"bounds","","",186,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",187,null],[12,"elems","","",187,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",188,null],[12,"dots","","",188,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",189,null],[12,"lt_token","","",189,null],[12,"args","","",189,null],[12,"gt_token","","",189,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",190,null],[12,"eq_token","","",190,null],[12,"ty","","",190,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",191,null],[12,"colon_token","","",191,null],[12,"bounds","","",191,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",192,null],[13,"Type","","A type argument.",192,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",192,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",192,null],[13,"Const","","A const expression. Must be inside of a block.",192,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",193,null],[12,"inputs","","`(A, B)`",193,null],[12,"output","","`C`",193,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",194,null],[12,"segments","","",194,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",195,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",195,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",195,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",196,null],[12,"arguments","","",196,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",197,null],[12,"ty","","",197,null],[12,"position","","",197,null],[12,"as_token","","",197,null],[12,"gt_token","","",197,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"to_string","","",198,[[],["string",3]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"to_string","","",157,[[],["string",3]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"to_string","","",237,[[],["string",3]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"into_iter","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"into_iter","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"into_iter","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"into_iter","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",244,[[]]],[11,"into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"fmt","syn","",198,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",198,[[]]],[11,"eq","","",198,[[["ident",3]]]],[11,"cmp","","",198,[[["ident",3]],["ordering",4]]],[11,"fmt","","",198,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",198,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"hash","","",198,[[]]],[11,"clone","","",198,[[],["ident",3]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"span","","",198,[[],[["option",4],["span",3]]]],[11,"fmt","","",198,[[["formatter",3]],[["result",4],["error",3]]]],[11,"peek","","",157,[[["cursor",3]]]],[11,"display","","",157,[[]]],[11,"peek","","",158,[[["cursor",3]]]],[11,"display","","",158,[[]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",159,[[["cursor",3]]]],[11,"display","","",159,[[]]],[11,"peek","syn::token","",0,[[["cursor",3]]]],[11,"display","","",0,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",1,[[["cursor",3]]]],[11,"display","","",1,[[]]],[11,"peek","","",2,[[["cursor",3]]]],[11,"display","","",2,[[]]],[11,"peek","","",3,[[["cursor",3]]]],[11,"display","","",3,[[]]],[11,"peek","","",4,[[["cursor",3]]]],[11,"display","","",4,[[]]],[11,"peek","","",5,[[["cursor",3]]]],[11,"display","","",5,[[]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",8,[[["cursor",3]]]],[11,"display","","",8,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]],[11,"peek","","",25,[[["cursor",3]]]],[11,"display","","",25,[[]]],[11,"peek","","",26,[[["cursor",3]]]],[11,"display","","",26,[[]]],[11,"peek","","",27,[[["cursor",3]]]],[11,"display","","",27,[[]]],[11,"peek","","",28,[[["cursor",3]]]],[11,"display","","",28,[[]]],[11,"peek","","",29,[[["cursor",3]]]],[11,"display","","",29,[[]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","","",32,[[["cursor",3]]]],[11,"display","","",32,[[]]],[11,"peek","","",33,[[["cursor",3]]]],[11,"display","","",33,[[]]],[11,"peek","","",34,[[["cursor",3]]]],[11,"display","","",34,[[]]],[11,"peek","","",35,[[["cursor",3]]]],[11,"display","","",35,[[]]],[11,"peek","","",36,[[["cursor",3]]]],[11,"display","","",36,[[]]],[11,"peek","","",37,[[["cursor",3]]]],[11,"display","","",37,[[]]],[11,"peek","","",38,[[["cursor",3]]]],[11,"display","","",38,[[]]],[11,"peek","","",39,[[["cursor",3]]]],[11,"display","","",39,[[]]],[11,"peek","","",40,[[["cursor",3]]]],[11,"display","","",40,[[]]],[11,"peek","","",41,[[["cursor",3]]]],[11,"display","","",41,[[]]],[11,"peek","","",42,[[["cursor",3]]]],[11,"display","","",42,[[]]],[11,"peek","","",43,[[["cursor",3]]]],[11,"display","","",43,[[]]],[11,"peek","","",44,[[["cursor",3]]]],[11,"display","","",44,[[]]],[11,"peek","","",45,[[["cursor",3]]]],[11,"display","","",45,[[]]],[11,"peek","","",46,[[["cursor",3]]]],[11,"display","","",46,[[]]],[11,"peek","","",47,[[["cursor",3]]]],[11,"display","","",47,[[]]],[11,"peek","","",48,[[["cursor",3]]]],[11,"display","","",48,[[]]],[11,"peek","","",49,[[["cursor",3]]]],[11,"display","","",49,[[]]],[11,"peek","","",50,[[["cursor",3]]]],[11,"display","","",50,[[]]],[11,"peek","","",51,[[["cursor",3]]]],[11,"display","","",51,[[]]],[11,"peek","","",52,[[["cursor",3]]]],[11,"display","","",52,[[]]],[11,"peek","","",53,[[["cursor",3]]]],[11,"display","","",53,[[]]],[11,"peek","","",54,[[["cursor",3]]]],[11,"display","","",54,[[]]],[11,"peek","","",55,[[["cursor",3]]]],[11,"display","","",55,[[]]],[11,"peek","","",56,[[["cursor",3]]]],[11,"display","","",56,[[]]],[11,"peek","","",57,[[["cursor",3]]]],[11,"display","","",57,[[]]],[11,"peek","","",58,[[["cursor",3]]]],[11,"display","","",58,[[]]],[11,"peek","","",59,[[["cursor",3]]]],[11,"display","","",59,[[]]],[11,"peek","","",60,[[["cursor",3]]]],[11,"display","","",60,[[]]],[11,"peek","","",61,[[["cursor",3]]]],[11,"display","","",61,[[]]],[11,"peek","","",62,[[["cursor",3]]]],[11,"display","","",62,[[]]],[11,"peek","","",63,[[["cursor",3]]]],[11,"display","","",63,[[]]],[11,"peek","","",64,[[["cursor",3]]]],[11,"display","","",64,[[]]],[11,"peek","","",65,[[["cursor",3]]]],[11,"display","","",65,[[]]],[11,"peek","","",66,[[["cursor",3]]]],[11,"display","","",66,[[]]],[11,"peek","","",67,[[["cursor",3]]]],[11,"display","","",67,[[]]],[11,"peek","","",68,[[["cursor",3]]]],[11,"display","","",68,[[]]],[11,"peek","","",69,[[["cursor",3]]]],[11,"display","","",69,[[]]],[11,"peek","","",70,[[["cursor",3]]]],[11,"display","","",70,[[]]],[11,"peek","","",71,[[["cursor",3]]]],[11,"display","","",71,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",73,[[["cursor",3]]]],[11,"display","","",73,[[]]],[11,"peek","","",74,[[["cursor",3]]]],[11,"display","","",74,[[]]],[11,"peek","","",75,[[["cursor",3]]]],[11,"display","","",75,[[]]],[11,"peek","","",76,[[["cursor",3]]]],[11,"display","","",76,[[]]],[11,"peek","","",77,[[["cursor",3]]]],[11,"display","","",77,[[]]],[11,"peek","","",78,[[["cursor",3]]]],[11,"display","","",78,[[]]],[11,"peek","","",79,[[["cursor",3]]]],[11,"display","","",79,[[]]],[11,"peek","","",80,[[["cursor",3]]]],[11,"display","","",80,[[]]],[11,"peek","","",81,[[["cursor",3]]]],[11,"display","","",81,[[]]],[11,"peek","","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","syn","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"parse_any","","",198,[[["parsestream",6]],["result",6]]],[11,"unraw","","",198,[[],["ident",3]]],[11,"advance_to","syn::parse","",113,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",185,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",245,[[["parsestream",6]],["result",6]]],[11,"drop","","",113,[[]]],[11,"from","syn","",198,[[["selfvalue",3]],["ident",3]]],[11,"from","","",198,[[["selftype",3]],["ident",3]]],[11,"from","","",198,[[["super",3]],["ident",3]]],[11,"from","","",198,[[["crate",3]],["ident",3]]],[11,"from","","",198,[[["extern",3]],["ident",3]]],[11,"from","","",198,[[["underscore",3]],["ident",3]]],[11,"from","","",118,[[["path",3]],["meta",4]]],[11,"from","","",118,[[["metalist",3]],["meta",4]]],[11,"from","","",118,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",121,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",121,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",123,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",123,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",130,[[["vispublic",3]],["visibility",4]]],[11,"from","","",130,[[["viscrate",3]],["visibility",4]]],[11,"from","","",130,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",131,[[["exprarray",3]],["expr",4]]],[11,"from","","",131,[[["exprassign",3]],["expr",4]]],[11,"from","","",131,[[["exprassignop",3]],["expr",4]]],[11,"from","","",131,[[["exprasync",3]],["expr",4]]],[11,"from","","",131,[[["exprawait",3]],["expr",4]]],[11,"from","","",131,[[["exprbinary",3]],["expr",4]]],[11,"from","","",131,[[["exprblock",3]],["expr",4]]],[11,"from","","",131,[[["exprbox",3]],["expr",4]]],[11,"from","","",131,[[["exprbreak",3]],["expr",4]]],[11,"from","","",131,[[["exprcall",3]],["expr",4]]],[11,"from","","",131,[[["exprcast",3]],["expr",4]]],[11,"from","","",131,[[["exprclosure",3]],["expr",4]]],[11,"from","","",131,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",131,[[["exprfield",3]],["expr",4]]],[11,"from","","",131,[[["exprforloop",3]],["expr",4]]],[11,"from","","",131,[[["exprgroup",3]],["expr",4]]],[11,"from","","",131,[[["exprif",3]],["expr",4]]],[11,"from","","",131,[[["exprindex",3]],["expr",4]]],[11,"from","","",131,[[["exprlet",3]],["expr",4]]],[11,"from","","",131,[[["exprlit",3]],["expr",4]]],[11,"from","","",131,[[["exprloop",3]],["expr",4]]],[11,"from","","",131,[[["exprmacro",3]],["expr",4]]],[11,"from","","",131,[[["exprmatch",3]],["expr",4]]],[11,"from","","",131,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",131,[[["exprparen",3]],["expr",4]]],[11,"from","","",131,[[["exprpath",3]],["expr",4]]],[11,"from","","",131,[[["exprrange",3]],["expr",4]]],[11,"from","","",131,[[["exprreference",3]],["expr",4]]],[11,"from","","",131,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",131,[[["exprreturn",3]],["expr",4]]],[11,"from","","",131,[[["exprstruct",3]],["expr",4]]],[11,"from","","",131,[[["exprtry",3]],["expr",4]]],[11,"from","","",131,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",131,[[["exprtuple",3]],["expr",4]]],[11,"from","","",131,[[["exprtype",3]],["expr",4]]],[11,"from","","",131,[[["exprunary",3]],["expr",4]]],[11,"from","","",131,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",131,[[["exprwhile",3]],["expr",4]]],[11,"from","","",131,[[["expryield",3]],["expr",4]]],[11,"from","","",141,[[],["index",3]]],[11,"from","","",145,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",145,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",145,[[["constparam",3]],["genericparam",4]]],[11,"from","","",153,[[["ident",3]]]],[11,"from","","",154,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",154,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",156,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",156,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",156,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",158,[[["litstr",3]],["lit",4]]],[11,"from","","",158,[[["litbytestr",3]],["lit",4]]],[11,"from","","",158,[[["litbyte",3]],["lit",4]]],[11,"from","","",158,[[["litchar",3]],["lit",4]]],[11,"from","","",158,[[["litint",3]],["lit",4]]],[11,"from","","",158,[[["litfloat",3]],["lit",4]]],[11,"from","","",158,[[["litbool",3]],["lit",4]]],[11,"from","","",236,[[["literal",3]]]],[11,"from","","",237,[[["literal",3]]]],[11,"from","","",163,[[["datastruct",3]],["data",4]]],[11,"from","","",163,[[["dataenum",3]],["data",4]]],[11,"from","","",163,[[["dataunion",3]],["data",4]]],[11,"from","","",173,[[["typearray",3]],["type",4]]],[11,"from","","",173,[[["typebarefn",3]],["type",4]]],[11,"from","","",173,[[["typegroup",3]],["type",4]]],[11,"from","","",173,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",173,[[["typeinfer",3]],["type",4]]],[11,"from","","",173,[[["typemacro",3]],["type",4]]],[11,"from","","",173,[[["typenever",3]],["type",4]]],[11,"from","","",173,[[["typeparen",3]],["type",4]]],[11,"from","","",173,[[["typepath",3]],["type",4]]],[11,"from","","",173,[[["typeptr",3]],["type",4]]],[11,"from","","",173,[[["typereference",3]],["type",4]]],[11,"from","","",173,[[["typeslice",3]],["type",4]]],[11,"from","","",173,[[["typetraitobject",3]],["type",4]]],[11,"from","","",173,[[["typetuple",3]],["type",4]]],[11,"from","","",194,[[]]],[11,"from","","",196,[[]]],[11,"from","syn::parse","",115,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",238,[[],["option",4]]],[11,"next_back","","",239,[[],["option",4]]],[11,"next_back","","",240,[[],["option",4]]],[11,"next_back","","",241,[[],["option",4]]],[11,"next_back","","",242,[[],["option",4]]],[11,"next_back","","",243,[[],["option",4]]],[11,"len","","",238,[[]]],[11,"len","","",239,[[]]],[11,"len","","",240,[[]]],[11,"len","","",241,[[]]],[11,"len","","",242,[[]]],[11,"len","","",243,[[]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",115,[[["intoiterator",8]]]],[11,"into_iter","syn","",123,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",115,[[]]],[11,"next","syn::punctuated","",238,[[],["option",4]]],[11,"size_hint","","",238,[[]]],[11,"next","","",239,[[],["option",4]]],[11,"size_hint","","",239,[[]]],[11,"next","","",240,[[],["option",4]]],[11,"size_hint","","",240,[[]]],[11,"next","","",241,[[],["option",4]]],[11,"size_hint","","",241,[[]]],[11,"next","","",242,[[],["option",4]]],[11,"size_hint","","",242,[[]]],[11,"next","","",243,[[],["option",4]]],[11,"size_hint","","",243,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",170,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","syn::parse","",112,[[]]],[11,"clone","","",115,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",146,[[]]],[11,"default","","",143,[[]]],[11,"default","","",195,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",157,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",142,[[]]],[11,"eq","","",141,[[]]],[11,"eq","","",157,[[["lifetime",3]]]],[11,"eq","syn::buffer","",104,[[]]],[11,"partial_cmp","syn","",157,[[["lifetime",3]],[["ordering",4],["option",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",112,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[]]],[11,"index_mut","","",106,[[]]],[11,"hash","syn","",142,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",157,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",142,[[["formatter",3]],["result",6]]],[11,"span","","",142,[[],[["option",4],["span",3]]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"span","","",141,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",198,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",198,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",198,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the…",117,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",117,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",117,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",117,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",117,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"path","","Returns the identifier that begins this structured meta…",118,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",123,[[],[["field",3],["iter",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",123,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",123,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",123,[[]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",146,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",146,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",146,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",146,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",146,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",146,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",146,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",146,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",230,[[],["turbofish",3]]],[11,"new","","",147,[[["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",157,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",158,[[["literal",3]]]],[11,"suffix","","",158,[[]]],[11,"span","","",158,[[],["span",3]]],[11,"set_span","","",158,[[["span",3]]]],[11,"new","","",232,[[["span",3]]]],[11,"value","","",232,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",232,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",232,[[["parser",8]],["result",6]]],[11,"span","","",232,[[],["span",3]]],[11,"set_span","","",232,[[["span",3]]]],[11,"suffix","","",232,[[]]],[11,"new","","",233,[[["span",3]]]],[11,"value","","",233,[[],["vec",3]]],[11,"span","","",233,[[],["span",3]]],[11,"set_span","","",233,[[["span",3]]]],[11,"suffix","","",233,[[]]],[11,"new","","",234,[[["span",3]]]],[11,"value","","",234,[[]]],[11,"span","","",234,[[],["span",3]]],[11,"set_span","","",234,[[["span",3]]]],[11,"suffix","","",234,[[]]],[11,"new","","",235,[[["span",3]]]],[11,"value","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"set_span","","",235,[[["span",3]]]],[11,"suffix","","",235,[[]]],[11,"new","","",236,[[["span",3]]]],[11,"base10_digits","","",236,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",236,[[],["result",6]]],[11,"suffix","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","",237,[[["span",3]]]],[11,"base10_digits","","",237,[[]]],[11,"base10_parse","","",237,[[],["result",6]]],[11,"suffix","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",161,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",161,[[["parser",8]],["result",6]]],[11,"without_plus","","In some positions, types may not contain the `+`…",173,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",172,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",186,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",194,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",194,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",194,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",195,[[]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",244,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",244,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[4,"Expr"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"thiserror":{"doc":"github crates-io docs-rs","i":[[24,"Error","thiserror","",null,null]],"p":[]},\
"thiserror_impl":{"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"xml":{"doc":"This crate currently provides an almost XML…","i":[[0,"macros","xml","Contains several macros used in this crate.",null,null],[0,"name","","Contains XML qualified names manipulation types and…",null,null],[3,"Name","xml::name","Represents a qualified XML name.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",0,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0,null],[11,"to_owned","","Returns an owned variant of the qualified name.",0,[[],["ownedname",3]]],[11,"local","","Returns a new `Name` instance representing plain local name.",0,[[],["name",3]]],[11,"prefixed","","Returns a new `Name` instance with the given local name…",0,[[],["name",3]]],[11,"qualified","","Returns a new `Name` instance representing a qualified…",0,[[["option",4]],["name",3]]],[11,"to_repr","","Returns a correct XML representation of this local name…",0,[[],["string",3]]],[11,"repr_display","","Returns a structure which can be displayed with `std::fmt`…",0,[[],["reprdisplay",3]]],[11,"prefix_repr","","Returns either a prefix of this name or…",0,[[]]],[3,"ReprDisplay","","A wrapper around `Name` whose `Display` implementation…",null,null],[3,"OwnedName","","An owned variant of `Name`.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",1,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1,null],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",1,[[],["name",3]]],[11,"local","","Returns a new `OwnedName` instance representing a plain…",1,[[],["ownedname",3]]],[11,"qualified","","Returns a new `OwnedName` instance representing a…",1,[[["option",4]],["ownedname",3]]],[11,"prefix_ref","","Returns an optional prefix by reference, equivalent to…",1,[[],["option",4]]],[11,"namespace_ref","","Returns an optional namespace by reference, equivalen to…",1,[[],["option",4]]],[0,"attribute","xml","Contains XML attributes manipulation types and functions.",null,null],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute.",null,null],[12,"name","","Attribute name.",2,null],[12,"value","","Attribute value.",2,null],[11,"to_owned","","Creates an owned attribute out of this borrowed one.",2,[[],["ownedattribute",3]]],[11,"new","","Creates a borrowed attribute using the provided borrowed…",2,[[["name",3]],["attribute",3]]],[3,"OwnedAttribute","","An owned version of an XML attribute.",null,null],[12,"name","","Attribute name.",3,null],[12,"value","","Attribute value.",3,null],[11,"borrow","","Returns a borrowed `Attribute` out of this owned one.",3,[[],["attribute",3]]],[11,"new","","Creates a new owned attribute using the provided owned…",3,[[["ownedname",3],["into",8],["string",3]],["ownedattribute",3]]],[0,"common","xml","Contains common types and functions used throughout the…",null,null],[3,"TextPosition","xml::common","Represents a position inside some textual document.",null,null],[12,"row","","Row, counting from 0",4,null],[12,"column","","Column, counting from 0",4,null],[11,"new","","Creates a new position initialized to the beginning of the…",4,[[],["textposition",3]]],[11,"advance","","Advances the position in a line",4,[[]]],[11,"advance_to_tab","","Advances the position in a line to the next tab position",4,[[]]],[11,"new_line","","Advances the position to the beginning of the next line",4,[[]]],[8,"Position","","Get the position in the document corresponding to the object",null,null],[10,"position","","Returns the current position or a position corresponding…",5,[[],["textposition",3]]],[4,"XmlVersion","","XML version enumeration.",null,null],[13,"Version10","","XML version 1.0.",6,null],[13,"Version11","","XML version 1.1.",6,null],[5,"is_whitespace_char","","Checks whether the given character is a white space…",null,[[]]],[5,"is_whitespace_str","","Checks whether the given string is compound only by white…",null,[[]]],[5,"is_name_start_char","","Checks whether the given character is a name start…",null,[[]]],[5,"is_name_char","","Checks whether the given character is a name character…",null,[[]]],[0,"escape","xml","Contains functions for performing XML special characters…",null,null],[5,"escape_str_attribute","xml::escape","Performs escaping of common XML characters inside an…",null,[[],["cow",4]]],[5,"escape_str_pcdata","","Performs escaping of common XML characters inside PCDATA.",null,[[],["cow",4]]],[0,"namespace","xml","Contains namespace manipulation types and functions.",null,null],[17,"NS_XMLNS_PREFIX","xml::namespace","Designates prefix for namespace definitions.",null,null],[17,"NS_XMLNS_URI","","Designates the standard URI for `xmlns` prefix.",null,null],[17,"NS_XML_PREFIX","","Designates prefix for a namespace containing several…",null,null],[17,"NS_XML_URI","","Designates the standard URI for `xml` prefix.",null,null],[17,"NS_NO_PREFIX","","Designates the absence of prefix in a qualified name.",null,null],[17,"NS_EMPTY_URI","","Designates an empty namespace URI, which is equivalent to…",null,null],[3,"Namespace","","Namespace is a map from prefixes to namespace URIs.",null,null],[12,"0","","",7,null],[11,"empty","","Returns an empty namespace.",7,[[],["namespace",3]]],[11,"is_empty","","Checks whether this namespace is empty.",7,[[]]],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that…",7,[[]]],[11,"contains","","Checks whether this namespace mapping contains the given…",7,[[]]],[11,"put","","Puts a mapping into this namespace.",7,[[]]],[11,"force_put","","Puts a mapping into this namespace forcefully.",7,[[],[["option",4],["string",3]]]],[11,"get","","Queries the namespace for the given prefix.",7,[[],["option",4]]],[6,"NamespaceMappings","","An alias for iterator type for namespace mappings…",null,null],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces.",null,null],[12,"0","","",8,null],[11,"empty","","Returns an empty namespace stack.",8,[[],["namespacestack",3]]],[11,"default","","Returns a namespace stack with default items in it.",8,[[],["namespacestack",3]]],[11,"push_empty","","Adds an empty namespace to the top of this stack.",8,[[],["namespacestack",3]]],[11,"pop","","Removes the topmost namespace in this stack.",8,[[],["namespace",3]]],[11,"try_pop","","Removes the topmost namespace in this stack.",8,[[],[["option",4],["namespace",3]]]],[11,"peek_mut","","Borrows the topmost namespace mutably, leaving the stack…",8,[[],["namespace",3]]],[11,"peek","","Borrows the topmost namespace immutably, leaving the stack…",8,[[],["namespace",3]]],[11,"put_checked","","Puts a mapping into the topmost namespace if this stack…",8,[[]]],[11,"put","","Puts a mapping into the topmost namespace in this stack.",8,[[]]],[11,"get","","Performs a search for the given prefix in the whole stack.",8,[[],["option",4]]],[11,"squash","","Combines this stack of namespaces into a single namespace.",8,[[],["namespace",3]]],[11,"checked_target","","Returns an object which implements `Extend` using…",8,[[],["checkedtarget",3]]],[11,"iter","","Returns an iterator over all mappings in this namespace…",8,[[],["namespacestackmappings",3]]],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a…",null,null],[6,"UriMapping","","A type alias for a pair of `(prefix, uri)` values returned…",null,null],[3,"CheckedTarget","","A wrapper around `NamespaceStack` which implements…",null,null],[0,"reader","xml","Contains high-level interface for a pull-based XML parser.",null,null],[3,"ParserConfig","xml::reader","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace in textual events be…",9,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to…",9,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.…",9,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",9,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be…",9,null],[12,"extra_entities","","A map of extra entities recognized by the parser. Default…",9,null],[12,"ignore_end_of_stream","","Whether or not the parser should ignore the end of stream.…",9,null],[12,"replace_unknown_entity_references","","Whether or not non-unicode entity references get replaced…",9,null],[12,"ignore_root_level_whitespace","","Whether or not whitespace at the root level of the…",9,null],[4,"XmlEvent","","An element of an XML input stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",10,null],[12,"version","xml::reader::XmlEvent","XML version.",11,null],[12,"encoding","","XML document encoding.",11,null],[12,"standalone","","XML standalone declaration.",11,null],[13,"EndDocument","xml::reader","Denotes to the end of the document stream.",10,null],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",10,null],[12,"name","xml::reader::XmlEvent","Processing instruction target.",12,null],[12,"data","","Processing instruction content.",12,null],[13,"StartElement","xml::reader","Denotes a beginning of an XML element.",10,null],[12,"name","xml::reader::XmlEvent","Qualified name of the element.",13,null],[12,"attributes","","A list of attributes associated with the element.",13,null],[12,"namespace","","Contents of the namespace mapping at this point of the…",13,null],[13,"EndElement","xml::reader","Denotes an end of an XML element.",10,null],[12,"name","xml::reader::XmlEvent","Qualified name of the element.",14,null],[13,"CData","xml::reader","Denotes CDATA content.",10,null],[13,"Comment","","Denotes a comment.",10,null],[13,"Characters","","Denotes character data outside of tags.",10,null],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",10,null],[3,"Error","","An XML parsing error.",null,null],[4,"ErrorKind","","",null,null],[13,"Syntax","","",15,null],[13,"Io","","",15,null],[13,"Utf8","","",15,null],[13,"UnexpectedEof","","",15,null],[6,"Result","","A result type yielded by `XmlReader`.",null,null],[3,"EventReader","","A wrapper around an `std::io::Read` instance which…",null,null],[11,"new","","Creates a new reader, consuming the given stream.",16,[[],["eventreader",3]]],[11,"new_with_config","","Creates a new reader with the provded configuration,…",16,[[["parserconfig",3]],["eventreader",3]]],[11,"next","","Pulls and returns next XML event from the stream.",16,[[],[["result",6],["xmlevent",4]]]],[11,"source","","",16,[[]]],[11,"source_mut","","",16,[[]]],[11,"into_inner","","Unwraps this `EventReader`, returning the underlying reader.",16,[[]]],[3,"Events","","An iterator over XML events created from some type…",null,null],[11,"into_inner","","Unwraps the iterator, returning the internal `EventReader`.",17,[[],["eventreader",3]]],[11,"source","","",17,[[]]],[11,"source_mut","","",17,[[]]],[11,"from_str","","A convenience method to create an `XmlReader` from a…",16,[[],["eventreader",3]]],[0,"writer","xml","Contains high-level interface for an events-based XML…",null,null],[0,"events","xml::writer","Contains `XmlEvent` datatype, instances of which are…",null,null],[4,"XmlEvent","xml::writer::events","A part of an XML output stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",18,null],[12,"version","xml::writer::events::XmlEvent","XML version.",19,null],[12,"encoding","","XML document encoding.",19,null],[12,"standalone","","XML standalone declaration.",19,null],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",18,null],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",20,null],[12,"data","","Processing instruction content.",20,null],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",18,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",21,null],[12,"attributes","","A list of attributes associated with the element.",21,null],[12,"namespace","","Contents of the namespace mapping at this point of the…",21,null],[13,"EndElement","xml::writer::events","Denotes an end of an XML element.",18,null],[12,"name","xml::writer::events::XmlEvent","Optional qualified name of the element.",22,null],[13,"CData","xml::writer::events","Denotes CDATA content.",18,null],[13,"Comment","","Denotes a comment.",18,null],[13,"Characters","","Denotes character data outside of tags.",18,null],[11,"processing_instruction","","Returns an writer event for a processing instruction.",18,[[["option",4]],["xmlevent",4]]],[11,"start_element","","Returns a builder for a starting element.",18,[[],["startelementbuilder",3]]],[11,"end_element","","Returns a builder for an closing element.",18,[[],["endelementbuilder",3]]],[11,"cdata","","Returns a CDATA event.",18,[[],["xmlevent",4]]],[11,"characters","","Returns a regular characters (PCDATA) event.",18,[[],["xmlevent",4]]],[11,"comment","","Returns a comment event.",18,[[],["xmlevent",4]]],[3,"EndElementBuilder","","",null,null],[11,"name","","Sets the name of this closing element.",23,[[],["endelementbuilder",3]]],[3,"StartElementBuilder","","A builder for a starting element event.",null,null],[11,"attr","","Sets an attribute value of this element to the given string.",24,[[],["startelementbuilder",3]]],[11,"ns","","Adds a namespace to the current namespace context.",24,[[],["startelementbuilder",3]]],[11,"default_ns","","Adds a default namespace mapping to the current namespace…",24,[[],["startelementbuilder",3]]],[6,"Result","xml::writer","A result type yielded by `XmlWriter`.",null,null],[4,"Error","","An error which may be returned by `XmlWriter` when writing…",null,null],[13,"Io","","An I/O error occured in the underlying `Write` instance.",25,null],[13,"DocumentStartAlreadyEmitted","","Document declaration has already been written to the…",25,null],[13,"LastElementNameNotAvailable","","The name of the last opening element is not available.",25,null],[13,"EndElementNameIsNotEqualToLastStartElementName","","The name of the last opening element is not equal to the…",25,null],[13,"EndElementNameIsNotSpecified","","End element name is not specified when it is needed, for…",25,null],[3,"EmitterConfig","","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output.…",26,null],[12,"indent_string","","A string which will be used for a single level of…",26,null],[12,"perform_indent","","Whether or not the emitted document should be indented.…",26,null],[12,"perform_escaping","","Whether or not characters in output events will be…",26,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the…",26,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to…",26,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters.…",26,null],[12,"keep_element_names_stack","","Whether or not to keep element names to support…",26,null],[12,"autopad_comments","","Whether or not to automatically insert leading and…",26,null],[12,"pad_self_closing","","Whether or not to automatically insert spaces before the…",26,null],[3,"EventWriter","","A wrapper around an `std::io::Write` instance which emits…",null,null],[11,"new","","Creates a new `EventWriter` out of an `std::io::Write`…",27,[[],["eventwriter",3]]],[11,"new_with_config","","Creates a new `EventWriter` out of an `std::io::Write`…",27,[[["emitterconfig",3]],["eventwriter",3]]],[11,"write","","Writes the next piece of XML document according to the…",27,[[],["result",6]]],[11,"inner_mut","","Returns a mutable reference to the underlying `Writer`.",27,[[]]],[11,"into_inner","","Unwraps this `EventWriter`, returning the underlying writer.",27,[[]]],[3,"ParserConfig","xml","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace in textual events be…",9,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to…",9,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.…",9,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",9,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be…",9,null],[12,"extra_entities","","A map of extra entities recognized by the parser. Default…",9,null],[12,"ignore_end_of_stream","","Whether or not the parser should ignore the end of stream.…",9,null],[12,"replace_unknown_entity_references","","Whether or not non-unicode entity references get replaced…",9,null],[12,"ignore_root_level_whitespace","","Whether or not whitespace at the root level of the…",9,null],[3,"EmitterConfig","","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output.…",26,null],[12,"indent_string","","A string which will be used for a single level of…",26,null],[12,"perform_indent","","Whether or not the emitted document should be indented.…",26,null],[12,"perform_escaping","","Whether or not characters in output events will be…",26,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the…",26,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to…",26,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters.…",26,null],[12,"keep_element_names_stack","","Whether or not to keep element names to support…",26,null],[12,"autopad_comments","","Whether or not to automatically insert leading and…",26,null],[12,"pad_self_closing","","Whether or not to automatically insert spaces before the…",26,null],[11,"from","xml::name","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","xml::attribute","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","xml::common","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","xml::namespace","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","xml::reader","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","xml::writer","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","xml::writer::events","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","xml::writer","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"position","xml::common","",4,[[],["textposition",3]]],[11,"position","xml::reader","",31,[[],["textposition",3]]],[11,"position","","Returns the position of the last event produced by the…",16,[[],["textposition",3]]],[11,"from","xml::name","",0,[[],["name",3]]],[11,"from","","",0,[[],["name",3]]],[11,"from","","",1,[[["name",3]],["ownedname",3]]],[11,"from","xml::reader","",31,[[]]],[11,"from","","",31,[[["error",3]]]],[11,"from","xml::writer","",25,[[["error",3]],["emittererror",4]]],[11,"from","xml::writer::events","",18,[[],["xmlevent",4]]],[11,"from","","",18,[[["endelementbuilder",3]],["xmlevent",4]]],[11,"from","","",18,[[["startelementbuilder",3]],["xmlevent",4]]],[11,"extend","xml::namespace","",7,[[]]],[11,"extend","","",8,[[]]],[11,"extend","","",30,[[]]],[11,"into_iter","xml::reader","",16,[[],["events",3]]],[11,"next","xml::namespace","",29,[[],[["option",4],["urimapping",6]]]],[11,"next","xml::reader","",17,[[],[["option",4],["result",6]]]],[11,"clone","xml::name","",0,[[],["name",3]]],[11,"clone","","",1,[[],["ownedname",3]]],[11,"clone","xml::attribute","",2,[[],["attribute",3]]],[11,"clone","","",3,[[],["ownedattribute",3]]],[11,"clone","xml::common","",4,[[],["textposition",3]]],[11,"clone","","",6,[[],["xmlversion",4]]],[11,"clone","xml::namespace","",7,[[],["namespace",3]]],[11,"clone","","",8,[[],["namespacestack",3]]],[11,"clone","xml::reader","",9,[[],["parserconfig",3]]],[11,"clone","","",10,[[],["xmlevent",4]]],[11,"clone","","",31,[[],["error",3]]],[11,"clone","","",15,[[]]],[11,"clone","xml::writer","",26,[[],["emitterconfig",3]]],[11,"default","xml::reader","",9,[[],["parserconfig",3]]],[11,"default","xml::writer","",26,[[],["emitterconfig",3]]],[11,"eq","xml::name","",0,[[["name",3]]]],[11,"ne","","",0,[[["name",3]]]],[11,"eq","","",1,[[["ownedname",3]]]],[11,"ne","","",1,[[["ownedname",3]]]],[11,"eq","xml::attribute","",2,[[["attribute",3]]]],[11,"ne","","",2,[[["attribute",3]]]],[11,"eq","","",3,[[["ownedattribute",3]]]],[11,"ne","","",3,[[["ownedattribute",3]]]],[11,"eq","xml::common","",4,[[["textposition",3]]]],[11,"ne","","",4,[[["textposition",3]]]],[11,"eq","","",6,[[["xmlversion",4]]]],[11,"eq","xml::namespace","",7,[[["namespace",3]]]],[11,"ne","","",7,[[["namespace",3]]]],[11,"eq","","",8,[[["namespacestack",3]]]],[11,"ne","","",8,[[["namespacestack",3]]]],[11,"eq","xml::reader","",9,[[["parserconfig",3]]]],[11,"ne","","",9,[[["parserconfig",3]]]],[11,"eq","","",10,[[["xmlevent",4]]]],[11,"ne","","",10,[[["xmlevent",4]]]],[11,"eq","","",31,[[["error",3]]]],[11,"ne","","",31,[[["error",3]]]],[11,"eq","","",15,[[["errorkind",4]]]],[11,"eq","xml::writer","",26,[[["emitterconfig",3]]]],[11,"ne","","",26,[[["emitterconfig",3]]]],[11,"fmt","xml::name","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","xml::attribute","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","xml::common","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","xml::namespace","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","xml::reader","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","xml::writer","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","xml::writer::events","",18,[[["formatter",3]],["result",6]]],[11,"fmt","xml::name","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","xml::attribute","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","xml::common","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","xml::reader","",31,[[["formatter",3]],["result",6]]],[11,"fmt","xml::writer","",25,[[["formatter",3]],["result",6]]],[11,"hash","xml::name","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","xml::attribute","",2,[[]]],[11,"hash","","",3,[[]]],[11,"from_str","xml::name","Parses the given string slice into a qualified name.",1,[[],[["ownedname",3],["result",4]]]],[11,"description","xml::reader","",31,[[]]],[11,"description","xml::writer","",25,[[]]],[11,"new","xml::reader","Returns a new config with default values.",9,[[],["parserconfig",3]]],[11,"create_reader","","Creates an XML reader with this configuration.",9,[[["read",8]],[["read",8],["eventreader",3]]]],[11,"add_entity","","Adds a new entity mapping and returns an updated config…",9,[[["into",8],["string",3]],["parserconfig",3]]],[11,"trim_whitespace","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"ignore_comments","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"coalesce_characters","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"ignore_end_of_stream","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"replace_unknown_entity_references","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"ignore_root_level_whitespace","","Sets the field to the provided value and returns updated…",9,[[],["parserconfig",3]]],[11,"as_writer_event","","Obtains a writer event from this reader event.",10,[[],[["option",4],["xmlevent",4]]]],[11,"msg","","Returns a reference to a message which is contained inside…",31,[[]]],[11,"kind","","",31,[[],["errorkind",4]]],[11,"new","xml::writer","Creates an emitter configuration with default values.",26,[[],["emitterconfig",3]]],[11,"create_writer","","Creates an XML writer with this configuration.",26,[[["write",8]],[["eventwriter",3],["write",8]]]],[11,"line_separator","","Sets the field to the provided value and returns updated…",26,[[["cow",4],["into",8]],["emitterconfig",3]]],[11,"indent_string","","Sets the field to the provided value and returns updated…",26,[[["cow",4],["into",8]],["emitterconfig",3]]],[11,"perform_indent","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"write_document_declaration","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"keep_element_names_stack","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"autopad_comments","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]],[11,"pad_self_closing","","Sets the field to the provided value and returns updated…",26,[[],["emitterconfig",3]]]],"p":[[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[3,"TextPosition"],[8,"Position"],[4,"XmlVersion"],[3,"Namespace"],[3,"NamespaceStack"],[3,"ParserConfig"],[4,"XmlEvent"],[13,"StartDocument"],[13,"ProcessingInstruction"],[13,"StartElement"],[13,"EndElement"],[4,"ErrorKind"],[3,"EventReader"],[3,"Events"],[4,"XmlEvent"],[13,"StartDocument"],[13,"ProcessingInstruction"],[13,"StartElement"],[13,"EndElement"],[3,"EndElementBuilder"],[3,"StartElementBuilder"],[4,"Error"],[3,"EmitterConfig"],[3,"EventWriter"],[3,"ReprDisplay"],[3,"NamespaceStackMappings"],[3,"CheckedTarget"],[3,"Error"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);